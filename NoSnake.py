import tkinter as tk
from random import *
from tkinter import messagebox

WIDTH = 240
HEIGHT = 240
SEG_SIZE = 20
SCORE = 0

def create_start_coords(): #—Å–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–µ–≥–º–µ–Ω—Ç–∞
    global segments
    x1, y1 = WIDTH/2, HEIGHT/2
    segments = [c.create_rectangle(x1, y1, x1+SEG_SIZE, y1+SEG_SIZE, fill="red"),
                c.create_rectangle(x1, y1+SEG_SIZE, x1+SEG_SIZE, y1+SEG_SIZE*2, fill="white"),
                c.create_rectangle(x1, y1+SEG_SIZE*2, x1+SEG_SIZE, y1+SEG_SIZE*3, fill="white"),]

def create_rand_apple(): #—Å–æ–∑–¥–∞–µ–º –µ–¥—É –¥–ª—è –∑–º–µ–π–∫–∏ 
    global apple
    
    x1, y1 = randint(0, WIDTH/20 - 1), randint(0, HEIGHT/20 - 1)
    apple_coord = [x1*SEG_SIZE, y1*SEG_SIZE, x1*SEG_SIZE+SEG_SIZE, y1*SEG_SIZE+SEG_SIZE]
    
    for segment in segments: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–∏–∑–∏—é —Å–æ –∑–º–µ–π–∫–æ–π
        if c.coords(segment) != apple_coord:
            if segment == segments[-1]: #–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç –∏ –≤—ã–≤–æ–¥–∏–º —è–±–ª–æ–∫–æ
                apple = c.create_oval(x1*SEG_SIZE, y1*SEG_SIZE, x1*SEG_SIZE+SEG_SIZE, y1*SEG_SIZE+SEG_SIZE, fill="#71db6e")
            continue #–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω–∏—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        else:
            if len(segments) == (WIDTH/SEG_SIZE)*(HEIGHT/SEG_SIZE):
                tk.messagebox.showwarning("Congratulations", "You are won")
                break
            create_rand_apple()
            break
             
def keyPress(event): #–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à
    global segments #–≤—ã–Ω–æ—Å–∏–º —Å–ø–∏—Å–æ–∫
     
    for segment in segments:
        segment_index = segments.index(segment) #–ø–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å–µ–≥–º–µ–Ω—Ç–∞
        if segment_index == 0: #—É—Å–ª–æ–≤–∏–µ –¥–ª—è –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏
            x1, y1, x2, y2 = c.coords(segment) #–ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞

            if event.keysym == "Up":
                print("Up")
                if y1 == 0:
                    tk.messagebox.showwarning("showwarning", "Warning")
                    break
                c.delete(segments[segment_index]) #—É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                segments[segment_index] = c.create_rectangle(x1, y1-SEG_SIZE, x2, y1, fill="red") #–ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                continue
            elif event.keysym == "Down":
                print("Down")
                if y2 == HEIGHT:
                    tk.messagebox.showwarning("showwarning", "Warning")
                    break
                c.delete(segments[segment_index]) #—É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                segments[segment_index] = c.create_rectangle(x1, y2, x2, y2+SEG_SIZE, fill="red") #–ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                continue
            elif event.keysym == "Left":
                print("Left")
                if x1 == 0:
                    tk.messagebox.showwarning("showwarning", "Warning")
                    break
                c.delete(segments[segment_index]) #—É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                segments[segment_index] = c.create_rectangle(x1-SEG_SIZE, y1, x1, y2, fill="red") #–ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                continue
            elif event.keysym == "Right":
                print("Right")
                if x2 == WIDTH:
                    tk.messagebox.showwarning("showwarning", "Warning")
                    break
                c.delete(segments[segment_index]) #—É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                segments[segment_index] = c.create_rectangle(x2, y1, x2+SEG_SIZE, y2, fill="red") #–ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç
                continue
            else:
                print(event.keysym)

        current_segmet = (c.coords(segment)) #–ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–µ–∫—É—â–∫–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
        c.delete(segments[segment_index])
        segments[segment_index] = c.create_rectangle(x1, y1, x2, y2, fill="white")    
        x1, y1, x2, y2 = current_segmet #–ø—Ä–∏—Å–≤–∞–∏–≤–µ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è      

    if c.coords(segments[0]) == c.coords(apple): #–ø–æ–µ–¥–∞–Ω–∏–µ —è–±–ª–æ–∫–∞
        print("Apple:)")
        segments.append(c.create_rectangle(x1, y1, x2, y2, fill="white")) #–¥–æ–±–∞–≤–¥—è–µ–º –∑–º–µ–π–∫–µ –æ–¥–∏–Ω –±–ª–æ–∫
        c.delete(apple) 
        create_rand_apple()   

def main():
    create_start_coords()
    create_rand_apple()
    c.bind("<Key>", keyPress)
    print('test')

root = tk.Tk()
root.title("Snake")
root.resizable(False, False)

label_score = tk.Label(root, text="Score: {}".format(SCORE), font=('Arial', 40))
label_score.pack()

c = tk.Canvas(root, width=WIDTH, height=HEIGHT, bg="#42d6cc") #–û–±–ª–∞—Å—Ç—å –∏–≥—Ä—ã
c.pack()
c.focus_set()

main()

root.mainloop()

#üõëüõëüõë–ó–º–µ–π–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Å–∫–≤–æ–∑—å —Å–µ–±—è. –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è